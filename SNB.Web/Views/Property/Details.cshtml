@model SNB.Web.Models.PropertyModel
@using SNB.Common

@{
    ViewBag.Title = "Property";
    var serial = 1;
}
<!-- Content area -->
<div class="content">

    <!-- Basic layout-->
    <div class="card border-teal">
        <div class="card-header header-elements-inline bg-teal">
            <h5 class="card-title"><strong>Property</strong></h5>
            <div class="header-elements">
                <div class="list-icons">
                    <a href="@Url.Action("Index","Property")" class="list-icons-item"><i class="icon-arrow-left52"></i></a>
                </div>
            </div>
        </div>
        <div class="card-body">

            <div class="row">

                <div class="col-md-6">
                    <div class="form-group row">
                        <label class="col-lg-3">@Html.DisplayNameFor(model => model.PropertyTitle)</label>
                        <div class="col-lg-6">
                            @Html.DisplayFor(model => model.PropertyTitle)
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-lg-3">@Html.DisplayNameFor(model => model.PropertyName)</label>
                        <div class="col-lg-6">
                            @Html.DisplayFor(model => model.PropertyName)
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-lg-3">@Html.DisplayNameFor(model => model.ContactNo)</label>
                        <div class="col-lg-6">
                            @Html.DisplayFor(model => model.ContactNo)
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-lg-3">@Html.DisplayNameFor(model => model.Address)</label>
                        <div class="col-lg-6">
                            @Html.DisplayFor(model => model.Address)
                        </div>
                    </div>
                </div>

                <div class="col-md-6">

                    <div class="form-group row">
                        <label class="col-lg-3">@Html.DisplayNameFor(model => model.PropertyTypeId)</label>
                        <div class="col-lg-6">
                            @Html.DisplayFor(model => model.PropertyType.TypeName)
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-lg-3">@Html.DisplayNameFor(model => model.DistrictId)</label>
                        <div class="col-lg-6">
                            @Html.DisplayFor(model => model.District.DistrictName)
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-lg-3">@Html.DisplayNameFor(model => model.AreaId)</label>
                        <div class="col-lg-6">
                            @Html.DisplayFor(model => model.Area.AreaName)
                        </div>
                    </div>
                </div>
            </div>

            <!-- Seat Allocation -->
            <div class="card">
                <div class="card-header bg-white header-elements-inline">
                    <h6 class="card-title">Seat Allocation</h6>
                </div>
                <table class="table table-striped media-library">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Seat Title</th>
                            <th>Seating Type</th>
                            <th>Available Date</th>
                            <th>Rent</th>
                            <th>Status</th>
                            <th class="text-center">@*<i class="icon-menu-open2"></i>*@Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (!Model.SeatingAllocationCollection.Any())
                        {
                            <tr><td colspan="6" class="text-center">Don't have any seat allocation</td></tr>
                        }
                        else
                        {
                            foreach (var item in Model.SeatingAllocationCollection)
                             {
                                 <tr>
                                     <td class="serial">@(serial++)</td>
                                     <td>@item.SeatingAllocationTitle</td>
                                     <td>@item.SeatingType.TypeName</td>
                                     <td>@item.AvailableDate.Value.ToString("dd-MMM-yyyy")</td>
                                     <td>@item.Rent.ToString("N2")</td>
                                     <td><span class="badge @CustomColor.SeatingAllocationStatus(item.Status??0) ">@((EnumSeatingAllocationStatus)item.Status)</span></td>
                                     <td class="text-center">
                                         <div class="list-icons">
                                             <a href="@Url.Action("Details","SeatingAllocation", new { id = item.Id })" class="list-icons-item text-info"><i class="icon-eye"></i></a>
                                             
                                         </div>
                                     </td>
                                 </tr>
                             }
                        }
                    </tbody>
                </table>
            </div>
            <!-- /Seat Allocation -->

            <!-- Media library -->
            <div class="card">
                <div class="card-header bg-white header-elements-inline">
                    <h6 class="card-title">Image Gallery</h6>
                </div>
                <table class="table table-striped media-library">
                    <thead>
                        <tr>
                            <th>Preview</th>
                            <th>Name</th>
                            <th>Date</th>
                            <th>File info</th>
                            <th class="text-center">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ImageCollection)
                        {
                            <tr>
                                <td>
                                    <a href="@Url.Content(item.AttachementFile.FileLocation)" data-popup="lightbox">
                                        <img src="@Url.Content(item.AttachementFile.FileLocation)" alt="" class="img-preview rounded">
                                    </a>
                                </td>
                                <td>@item.AttachementFile.OrginalFileName</td>
                                <td>@item.AttachementFile.CreatedAt.Value.ToString("dd-MMM-yyyy")</td>
                                <td>
                                    <ul class="list-unstyled mb-0">
                                        <li><span class="font-weight-semibold">Size:</span> @((item.AttachementFile.FileSize != null ? item.AttachementFile.FileSize.Value / (1024.0 * 1024) : 0.0).ToString("0.00")) MB</li>
                                        <li><span class="font-weight-semibold">Format:</span> @item.AttachementFile.FileExtension</li>
                                    </ul>
                                </td>
                                <td class="text-center">
                                    <div class="list-icons">
                                        <a href="#" onclick="delete_Data('@item.Id')"  class="list-icons-item text-danger"><i class="icon-bin"></i></a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <!-- /media library -->

        </div>

    </div>
    <!-- /basic layout -->

</div>
<!-- /content area -->


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/ajax-call")
    @Scripts.Render("~/bundles/bootstrap-file")
    @Scripts.Render("~/bundles/media-gallery")
    <script>

        function delete_Data(id) {
                var url = '@Url.Action("DeleteAttachmentFileImage", "Property")';
                var paramData = { id: id };
                 delete_confirm(url, paramData);
              //   ajaxCall(url, paramData, "renderRemoveItem");
            }

    </script>
}
