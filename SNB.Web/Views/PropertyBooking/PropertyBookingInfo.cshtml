@model SNB.Web.Models.PropertyBookingModel
@{
    ViewBag.Title = "Property Booking Info";
    var saImgIndex = 0;
}

@section styles{
    <style>
        .sa-img {
            max-height: 350px;
        }
    </style>
}

@{
    var imageUrl = Model.SeatingAllocation.ImageCollection.Any() ?
        Model.SeatingAllocation.ImageCollection.FirstOrDefault().AttachementFile.FileLocation :
        "~/Content/images/home.png";

}

<div class="content">


    <div class="row">
        <div class="col-md-7">
            <div class="card">
                
                    <div class="">

                        <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
                            <ol class="carousel-indicators">
                                @if (!Model.SeatingAllocation.ImageCollection.Any())
                                {
                                    <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
                                }
                                @for(int i=0; i < Model.SeatingAllocation.ImageCollection.Count; i++)
                                {
                                    <li data-target="#carouselExampleIndicators" data-slide-to="@i" class='@(i == 0 ? "active" : "")'></li>
                                }
                            </ol>
                            <div class="carousel-inner">
                                @if (!Model.SeatingAllocation.ImageCollection.Any())
                                {
                                    <div class="carousel-item active">
                                        <img class="d-block w-100 sa-img" src="@Url.Content(imageUrl)" alt="Image">
                                    </div>
                                }
                                @foreach (var saImg in Model.SeatingAllocation.ImageCollection)
                                {
                                    <div class="carousel-item @(saImgIndex++ == 0 ? "active" : "")">
                                        <img class="d-block w-100 sa-img" src="@Url.Content(saImg.AttachementFile.FileLocation)" alt="Image">
                                    </div>
                                }
                            </div>
                            <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="sr-only">Previous</span>
                            </a>
                            <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="sr-only">Next</span>
                            </a>
                        </div>

                    </div>
                    
                    <div class="card-body">
                        <div class="mb-1">
                            <h6 class="d-flex font-weight-semibold flex-nowrap mb-0">
                                <a href="#" class="text-default mr-2 text-truncate">@Model.SeatingAllocation.SeatingAllocationTitle</a>
                                <span class="text-success ml-auto">@Model.SeatingAllocation.Rent.ToString("N0")</span>
                            </h6>
                        </div>
                        <p class="mb-0 text-muted">@Model.SeatingAllocation.SeatingType.TypeName</p>
                        <p class="mb-0 text-muted">@Model.SeatingAllocation.Property.Address</p>
                        <p class="mb-0 text-muted">@Model.SeatingAllocation.Description</p>
                    </div>
                
            </div>
        </div>
        

            <div class="col-md-5">
                @using (Html.BeginForm("PropertyBookingRequest", "PropertyBooking", FormMethod.Get))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.SeatingAllocationId)
                    @Html.ValidationSummary()

                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title font-weight-bolder">Information</h5>
                        </div>
                        <div class="card-body">
                            <div class="form-group row mb-2">
                                <label class="col-md-4 font-weight-bold">@Html.DisplayNameFor(x => x.SeatingAllocation.Property.PropertyName)</label>
                                <label class="col-md-8">@Html.DisplayFor(x => x.SeatingAllocation.Property.PropertyName)</label>
                            </div>
                            <div class="form-group row mb-2">
                                <label class="col-md-4 font-weight-bold">@Html.DisplayNameFor(x => x.SeatingAllocation.Property.ContactNo)</label>
                                <label class="col-md-8">@Html.DisplayFor(x => x.SeatingAllocation.Property.ContactNo)</label>
                            </div>
                            <div class="form-group row mb-2">
                                <label class="col-md-4 font-weight-bold">@Html.DisplayNameFor(x => x.SeatingAllocation.Property.PropertyType.TypeName)</label>
                                <label class="col-md-8">@Html.DisplayFor(x => x.SeatingAllocation.Property.PropertyType.TypeName)</label>
                            </div>
                            <div class="form-group row mb-2">
                                <label class="col-md-4 font-weight-bold">@Html.DisplayNameFor(x => x.SeatingAllocation.Rent)</label>
                                <label class="col-md-8">@(Model.SeatingAllocation.Rent.ToString("N0"))</label>
                            </div>
                            <div class="form-group row mb-2">
                                <label class="col-md-4 font-weight-bold">@Html.DisplayNameFor(x => x.SeatingAllocation.AvailableDate)</label>
                                <label class="col-md-8">@(Model.SeatingAllocation.AvailableDate.Value.ToString("dd-MMM-yyyy"))</label>
                            </div>
                            <div class="form-group row mb-2">
                                <label class="col-md-4 font-weight-bold">@Html.DisplayNameFor(x => x.FromDate)</label>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.FromDate, new { @class = "form-control daterange-singledate", @Value = "", @placeholder = "From Date" })
                                    @Html.ValidationMessageFor(model => model.FromDate)
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-md-4 font-weight-bold">@Html.DisplayNameFor(x => x.ToDate)</label>
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.ToDate, new { @class = "form-control daterange-singledate", @Value = "", @placeholder = "To Date" })
                                    @Html.ValidationMessageFor(model => model.ToDate)
                                </div>
                            </div>

                            <div class="d-flex align-items-center">
                                <button type="submit" class="btn bg-blue btn-labeled btn-labeled-right ml-auto">
                                    <b><i class="icon-paperplane"></i></b> Submit
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
    </div>


</div>


@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap-file")
    @Scripts.Render("~/bundles/daterange-picker")

}