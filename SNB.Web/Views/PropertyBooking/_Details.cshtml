@model SNB.Web.Models.PropertyBookingModel
@using SNB.Common
@using SNB.Web.Models
<style>
    .details-row {
        margin: 2px;
    }

        .details-row label {
            font-weight: bold;
        }
</style>


<div class="row justify-content-md-center">

    <div class="col-md-6">
        <div class="form-group row details-row">
            <label class="col-lg-4">@Html.DisplayNameFor(model => model.Property.PropertyTitle)</label>
            <div class="col-lg-6">
                @Html.DisplayFor(model => model.Property.PropertyTitle)
            </div>
        </div>
        <div class="form-group row details-row">
            <label class="col-lg-4">@Html.DisplayNameFor(model => model.Property.PropertyName)</label>
            <div class="col-lg-6">
                @Html.DisplayFor(model => model.Property.PropertyName)
            </div>
        </div>
        @if (AuthenticatedUser.GetUserFromIdentity().UserType.ToLower() == DefaultValue.UserType.Landlord.ToLower())
        {
            <div class="form-group row details-row">
                <label class="col-lg-4">@Html.DisplayNameFor(model => model.User.FullName)</label>
                <div class="col-lg-6">
                    @Html.DisplayFor(model => model.User.FullName)
                </div>
            </div>
            <div class="form-group row details-row">
                <label class="col-lg-4">@Html.DisplayNameFor(model => model.User.Email)</label>
                <div class="col-lg-6">
                    @Html.DisplayFor(model => model.User.Email)
                </div>
            </div>
            <div class="form-group row details-row">
                <label class="col-lg-4">@Html.DisplayNameFor(model => model.User.Mobile)</label>
                <div class="col-lg-6">
                    @Html.DisplayFor(model => model.User.Mobile)
                </div>
            </div>
        }
        else
        {
            <div class="form-group row details-row">
                <label class="col-lg-4">@Html.DisplayNameFor(model => model.Property.District.DistrictName)</label>
                <div class="col-lg-6">
                    @Html.DisplayFor(model => model.Property.District.DistrictName)
                </div>
            </div>
            <div class="form-group row details-row">
                <label class="col-lg-4">@Html.DisplayNameFor(model => model.Property.Address)</label>
                <div class="col-lg-6">
                    @Html.DisplayFor(model => model.Property.Address)
                </div>
            </div>
            <div class="form-group row details-row">
                <label class="col-lg-4">@Html.DisplayNameFor(model => model.Property.ContactNo)</label>
                <div class="col-lg-6">
                    @Html.DisplayFor(model => model.Property.ContactNo)
                </div>
            </div>
        }
        <div class="form-group row details-row">
            <label class="col-lg-4">@Html.DisplayNameFor(model => model.Status)</label>
            <div class="col-lg-6">
                <span class="badge @CustomColor.PropertyBookingStatus(Model.Status??0)">@((EnumPropertyBookingStatus)(Model.Status ?? 0))</span>
            </div>
        </div>
    </div>

    <div class="col-md-6">

        @*<div class="form-group row details-row">
            <label class="col-lg-4">@Html.DisplayNameFor(model => model.SeatingAllocation.SeatingAllocationTitle)</label>
            <div class="col-lg-6">
                @Html.DisplayFor(model => model.SeatingAllocation.SeatingAllocationTitle)
            </div>
        </div>
        <div class="form-group row details-row">
            <label class="col-lg-4">@Html.DisplayNameFor(model => model.SeatingAllocation.SeatingType.TypeName)</label>
            <div class="col-lg-6">
                @Html.DisplayFor(model => model.SeatingAllocation.SeatingType.TypeName)
            </div>
        </div>*@
        <div class="form-group row details-row">
            <label class="col-lg-4">@Html.DisplayNameFor(model => model.Property.Description)</label>
            <div class="col-lg-6">
                @Html.DisplayFor(model => model.Property.Description)
            </div>
        </div>
        <div class="form-group row details-row">
            <label class="col-lg-4">@Html.DisplayNameFor(model => model.Property.AvailableFrom)</label>
            <div class="col-lg-6">
                @(Model.Property.AvailableFrom?.ToString("dd-MMM-yyyy"))
            </div>
        </div>
        <div class="form-group row details-row">
            <label class="col-lg-4">@Html.DisplayNameFor(model => model.ConfirmDate)</label>
            <div class="col-lg-6">
                @(Model.ConfirmDate?.ToString("dd-MMM-yyyy"))
            </div>
        </div>
        <div class="form-group row details-row">
            <label class="col-lg-4">@Html.DisplayNameFor(model => model.FromDate)</label>
            <div class="col-lg-6">
                @(Model.FromDate != null ? Model.FromDate.Value.ToString("dd-MMM-yyyy") : "")
            </div>
        </div>
        <div class="form-group row details-row">
            <label class="col-lg-4">@Html.DisplayNameFor(model => model.ToDate)</label>
            <div class="col-lg-6">
                @(Model.ToDate != null ? Model.ToDate.Value.ToString("dd-MMM-yyyy") : "")
            </div>
        </div>
        <div class="form-group row details-row">
            <label class="col-lg-4">@Html.DisplayName("Booked Date")</label>
            <div class="col-lg-6">
                @(Model.CreatedAt?.ToString("dd-MMM-yyyy"))
            </div>
        </div>
        <div class="form-group row details-row">
            <label class="col-lg-4">@Html.DisplayNameFor(model => model.Remarks)</label>
            <div class="col-lg-6">
                @Html.DisplayFor(model => model.Remarks)
            </div>
        </div>
    </div>
</div>


